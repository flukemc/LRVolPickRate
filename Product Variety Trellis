import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the data from the CSV file
file_path = "LRVolPickRate.csv"
df = pd.read_csv(file_path)

# Choose relevant columns for the analysis
selected_columns = ["Yield kg", "Pick Rate Kgs/Hr (Picker Only â€“ Derived Kgs)", "Product Variety"]
df_selected = df[selected_columns]

# Encode categorical variables (Product Variety) using one-hot encoding
df_encoded = pd.get_dummies(df_selected, columns=["Product Variety"], drop_first=True)

# Iterate over each Product Variety
for variety in df["Product Variety"].unique():
    # Filter data for the current Product Variety
    df_filtered = df_encoded[df_encoded[f"Product Variety_{variety}"] == 1]

    # Split the filtered data into features (X) and target variable (y)
    X = df_filtered.drop("Yield kg", axis=1)
    y = df_filtered["Yield kg"]

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Create and train the linear regression model
    model = LinearRegression()
    model.fit(X_train, y_train)

    # Make predictions on the test set
    y_pred = model.predict(X_test)

    # Evaluate the model
    mse = mean_squared_error(y_test, y_pred)
    print(f"Mean Squared Error for {variety}: {mse}")

    # Visualize the results for each Product Variety separately
    sns.scatterplot(x=y_test, y=y_pred)
    plt.xlabel(f"Actual Yield kg - {variety}")
    plt.ylabel(f"Predicted Yield kg - {variety}")
    plt.title(f"Linear Regression: Actual vs Predicted Yield - {variety}")
    plt.show()
